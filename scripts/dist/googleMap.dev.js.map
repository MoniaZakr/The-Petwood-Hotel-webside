{"version":3,"sources":["googleMap.js"],"names":["input1","document","getElementById","output","querySelector","mode","window","addEventListener","alert","selectedMode","value","innerHTML","checked","intMap","location","lat","lng","map","google","maps","Map","zoom","center","marker","Marker","position","mapTypeId","MapTypeId","ROADMAP","info","InfoWindow","content","addListener","open","autocomplete1","places","Autocomplete","directionsDisplay","DirectionsRenderer","directionsService","DirectionsService","setMap","calcRoute","request","origin","destination","travelMode","TravelMode","console","log","route","result","status","DirectionsStatus","OK","routes","legs","distance","text","duration","setDirections","setCenter"],"mappings":"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","sourcesContent":["\r\nconst input1 = document.getElementById('origin');\r\nconst output = document.querySelector('.output');\r\nconst mode = document.getElementById(\"mode\");\r\n\r\n\r\n\r\nwindow.addEventListener(\"load\", function() {\r\n    this.alert(\"Please enter the Google maps api key in the HTML file! More information at: https://developers.google.com/maps/documentation/javascript/get-api-key?hl=pl\")\r\n    const selectedMode = document.querySelector('input[type=\"radio\"]:checked')\r\n    input1.value = \"\";\r\n    output.innerHTML = \"\";\r\n    if (selectedMode) {\r\n      selectedMode.checked = false;\r\n    }\r\n});\r\n\r\n  \r\nfunction intMap() {\r\n    const location = {lat :53.152360, lng :-0.224120};\r\n\r\n    const map = new google.maps.Map(document.getElementById(\"map\"), { zoom: 8,\r\n    center: location});\r\n    \r\n    const marker = new google.maps.Marker({\r\n        position: location,\r\n        map:map,\r\n        mapTypeId: google.maps.MapTypeId.ROADMAP\r\n    })\r\n\r\n    const info = new google.maps.InfoWindow({\r\n        content:'<h1>The Petwood Hotel</h1>'\r\n    });\r\n    \r\n    marker.addListener(\"click\", function() {\r\n        info.open(map, marker)\r\n    });\r\n    \r\n    autocomplete1 = new google.maps.places.Autocomplete(input1);\r\n      \r\n\r\n    const directionsDisplay = new google.maps.DirectionsRenderer();\r\n    const directionsService = new google.maps.DirectionsService();\r\n    \r\n    \r\n    directionsDisplay.setMap(map);\r\n    mode.addEventListener(\"change\", function () {\r\n        const selectedMode = document.querySelector('input[type=\"radio\"]:checked').value;\r\n        calcRoute(directionsDisplay, directionsService, map, location, selectedMode);\r\n    });\r\n}\r\n\r\nfunction calcRoute(directionsDisplay, directionsService, map, location, selectedMode) {\r\n    \r\n    const request = {\r\n        origin: input1.value,\r\n        destination: {lat :53.152360, lng :-0.224120},\r\n        travelMode: google.maps.TravelMode[selectedMode], \r\n    }\r\n    console.log(request.origin);\r\n\r\n    //pass the request to the route method\r\n    directionsService.route(request, function (result, status) {\r\n        if (status == google.maps.DirectionsStatus.OK) {\r\n\r\n            //Get distance and time\r\n            // const output = document.querySelector('.output');\r\n            output.innerHTML = \"<div class='alert-info'>From: \" + document.getElementById(\"origin\").value + \".<br />To: Petwood Hotel\"  + \".<br /> Distance : \" + result.routes[0].legs[0].distance.text + \".<br />Duration : \" + result.routes[0].legs[0].duration.text + \".</div>\";\r\n\r\n            //display route\r\n            directionsDisplay.setDirections(result);\r\n        } else {\r\n            //delete route from map\r\n            directionsDisplay.setDirections({ routes: [] });\r\n            //center map \r\n            map.setCenter(location);\r\n\r\n            //show error message\r\n             output.innerHTML = \"<div class='alert-danger'> Could not retrieve driving distance.</div>\";\r\n        }\r\n    });\r\n}\r\n\r\n  \r\n\r\n  \r\n    \r\n\r\n    \r\n\r\n\r\n\r\n \r\n \r\n"],"file":"googleMap.dev.js"}