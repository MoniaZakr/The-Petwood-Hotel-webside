{"version":3,"sources":["googleMap.js"],"names":["selectMode","document","getElementById","value","button","querySelector","location","map","google","maps","zoom","lat","lng","marker","Marker","position","MapTypeId","ROADMAP","InfoWindow","mapTypeId","addListener","content","open","info","places","Autocomplete","input1","autocomplete2","input2","directionsDisplay","DirectionsRenderer","setMap","calcRoute","directionsService","addEventListener","origin","destination","travelMode","TravelMode","console","log","request","DirectionsStatus","OK","status","innerHTML","result","routes","legs","distance","text","duration","setDirections","setCenter","output"],"mappings":"aAAA,IAAMA,WAAaC,SAASC,eAAe,QAAQC,MAC7CC,OAASH,SAASI,cAAc,WADhCL,OAAUC,SAAGA,eAASC,UACtBE,OAASH,SAASI,eAAc,eAUlC,SAAMC,SAAN,IACSC,EAAOC,IAAAA,OAAAC,KAAgBR,IAAAA,SAASC,eAAe,OAAQ,CAAAQ,KAAA,EAAEA,OADlE,CAAAC,IAAA,SAAAC,KAAA,UACAC,EAAA,IAAAL,OAAAC,KAAAK,OAAA,CAGMD,SAAS,CAAAF,IAAIH,SAAYM,KAAO,QAClCC,IAAQR,EAAEI,UAAKH,OAANC,KAAAO,UAAAC,UACLV,EAF8B,IAAAC,OAAAC,KAAAS,WAAA,CAGlCC,QAAWX,+BAGfK,EAAUO,YAAa,QAAMF,WACzBG,EAAQC,KAAAf,EAAAM,KAGRU,cAAeV,IAAAA,OAAfJ,KAAAe,OAAAC,aAAAC,QADJC,cAAA,IAAAnB,OAAAC,KAAAe,OAAAC,aAAAG,QAKAD,IAAAA,EAA2BlB,IAAKe,OAAOC,KAAAA,mBAEjCI,EAAwBrB,IAAAA,OAAAC,KAAYqB,kBAG1CD,EAAkBE,OAAOxB,GACzByB,UAAUH,EAAmBI,GAC7BhC,SAASC,eAAe,QAAQgC,iBAAiB,SAAS,WACtDF,UAAUH,EAAmBI,KAIrC,SAASD,UAAUH,EAAmBI,GAG9BE,IAAAA,EAAc,CACdC,OAAWV,OAAQvB,MACnBkC,YAAY7B,OAAY8B,MAAxBD,WAAY7B,OAAOC,KAAK6B,WAAWtC,aAEvCuC,QAAQC,IAAIC,EAAQJ,YAIhBJ,EAAczB,MAAOC,EAAKiC,SAAiBC,EAAIC,GAE3CA,GAAApC,OAAAC,KAAAiC,iBAAAC,IAEmB1C,SAAAI,cAAA,WAAZwC,UAAY,iCAAmC5C,SAASC,eAAe,UAAUC,MAAQ,cAAgBF,SAASC,eAAe,eAAeC,MAAQ,0DAA4D2C,EAAOC,OAAO,GAAGC,KAAK,GAAGC,SAASC,KAAO,4DAA8DJ,EAAOC,OAAO,GAAGC,KAAK,GAAGG,SAASD,KAAO,UAK3WrB,EAAAuB,cAAAN,KAEAjB,EAAAuB,cAAA,CAAAL,OAAA,KACIM,IAAAA,UAAU/C,UAIjBgD,OAAAT,UAAA","file":"googleMap.min.js","sourcesContent":["const selectMode = document.getElementById(\"mode\").value;\r\nconst button = document.querySelector(\".search\");\r\nconst input1 = document.getElementById('origin');\r\nconst input2 = document.getElementById('destination');\r\n\r\n\r\n\r\n\r\nfunction intMap() {\r\n   \r\n\r\n    const location = {lat :53.152360, lng :-0.224120};\r\n    const map = new google.maps.Map(document.getElementById(\"map\"), { zoom: 8,\r\n    center: location});\r\n\r\n    const marker = new google.maps.Marker({\r\n        position:{lat :53.152360, lng :-0.224120},\r\n        map:map,\r\n        mapTypeId: google.maps.MapTypeId.ROADMAP\r\n    })\r\n\r\n    const info = new google.maps.InfoWindow({\r\n        content:'<h1>The Petwood Hotel</h1>'\r\n    });\r\n    marker.addListener(\"click\", function() {\r\n        info.open(map, marker)\r\n    });\r\n    \r\n    autocomplete1 = new google.maps.places.Autocomplete(input1);\r\n    autocomplete2 = new google.maps.places.Autocomplete(input2);\r\n\r\n    const directionsDisplay = new google.maps.DirectionsRenderer();\r\n    const directionsService = new google.maps.DirectionsService();\r\n\r\n    directionsDisplay.setMap(map);\r\n    calcRoute(directionsDisplay, directionsService);\r\n    document.getElementById(\"mode\").addEventListener(\"change\",() =>{\r\n        calcRoute(directionsDisplay, directionsService)\r\n    } )\r\n    \r\n}\r\nfunction calcRoute(directionsDisplay, directionsService) {\r\n\r\n    var request = {\r\n        origin: input1.value,\r\n        destination: input2.value,\r\n        travelMode: google.maps.TravelMode[selectMode], //WALKING, BYCYCLING, TRANSIT\r\n    }\r\n    console.log(request.travelMode);\r\n\r\n    //pass the request to the route method\r\n    directionsService.route(request, function (result, status) {\r\n        if (status == google.maps.DirectionsStatus.OK) {\r\n\r\n            //Get distance and time\r\n            const output = document.querySelector('.output');\r\n            output.innerHTML = \"<div class='alert-info'>From: \" + document.getElementById(\"origin\").value + \".<br />To: \" + document.getElementById(\"destination\").value + \".<br /> Driving distance <i class='fas fa-road'></i> : \" + result.routes[0].legs[0].distance.text + \".<br />Duration <i class='fas fa-hourglass-start'></i> : \" + result.routes[0].legs[0].duration.text + \".</div>\";\r\n\r\n            //display route\r\n            directionsDisplay.setDirections(result);\r\n        } else {\r\n            //delete route from map\r\n            directionsDisplay.setDirections({ routes: [] });\r\n            //center map in London\r\n            map.setCenter(location);\r\n\r\n            //show error message\r\n            output.innerHTML = \"<div class='alert-danger'> Could not retrieve driving distance.</div>\";\r\n        }\r\n    });\r\n\r\n}\r\n// document.getElementById(\"mode\").addEventListener(\"change\", calcRoute)\r\n    \r\n\r\n\r\n\r\n \r\n \r\n"]}