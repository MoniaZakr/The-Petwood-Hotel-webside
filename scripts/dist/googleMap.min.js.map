{"version":3,"sources":["googleMap.js"],"names":["button","document","querySelector","intMap","location","lat","lng","map","google","maps","Map","getElementById","zoom","center","marker","Marker","ROADMAP","mapTypeId","MapTypeId","content","addListener","info","open","autocomplete1","places","Autocomplete","input1","directionsDisplay","DirectionsRenderer","directionsService","DirectionsService","calcRoute","addEventListener","origin","value","destination","travelMode","TravelMode","selectMode","console","log","request","route","result","status","DirectionsStatus","OK","innerHTML","routes","legs","distance","text","duration","setDirections","setCenter","output"],"mappings":"aACA,IAAMA,OAASC,SAASC,cAAc,WAAhCF,OAASC,SAASC,eAAc,UAItC,SAASC,SACN,IAAMC,EAAW,CAAAC,IAAA,SAAAC,KAAA,QAAuBC,EAAA,IAAAC,OAAAC,KAAAC,IAAAT,SAAAU,eAAA,OAAA,CAAAC,KAAA,EAAxCC,OAAAT,IAEyEU,EAAR,IAAAN,OAAAC,KAAAM,OAAA,CAChEF,SAAQT,EADRG,IAAAA,EAGMO,UAAaN,OAAOC,KAAKM,UAAOC,UAGlCC,EAAWT,IAAMA,OAAMU,KAAAA,WAAUF,CAHrCG,QAAA,+BAOIA,EAAOC,YAAC,QAAA,WADZC,EAAAC,KAAAf,EAAAO,KAGAS,cAAA,IAAAf,OAAAC,KAAAe,OAAAC,aAAAC,QAMA,IAAMC,EAAwBnB,IAAAA,OAAAC,KAAYmB,mBACpCC,EAAwBrB,IAAAA,OAAAC,KAAYqB,kBAK1C7B,EAASU,OAAeJ,GACpBwB,UAAUJ,EAAmBE,GADjC5B,SAAAU,eAAA,QAAAqB,iBAAA,SAAA,WAGHD,UAAAJ,EAAAE,KAIOI,SAAAA,UAAeC,EADHL,GAEZM,IAAAA,EAAa,CAAC9B,OAAKqB,OAANQ,MAAiB5B,YAAM,CAAAD,IAAA,SAAAC,KAAA,QAFxB8B,WAAA5B,OAAAC,KAAA4B,WAAAC,aAAhBC,QAAAC,IAAAC,EAAAL,YAQAP,EAAkBa,MAAMD,EAAS,SAAUE,EAAQC,GAC3CA,GAAUpC,OAAAC,KAAYoC,iBAAqBC,IAG5B7C,SAASC,cAAc,WAC/B6C,UAAY,iCAAmC9C,SAASU,eAAe,UAA3DuB,MAA6E,0EAAwFS,EAANK,OAAiBC,GAAjBA,KAAyBC,GAAAA,SAAxLC,KAAwM,4DAAoER,EAANK,OAAiBC,GAAjBA,KAAyBG,GAAAA,SAA/RD,KAA+S,UAI/TxB,EAAA0B,cAAAV,KAE+BK,EAAQK,cAAA,CAAAL,OAAA,KAE1CzC,IAAI+C,UAAUlD,UAGRmD,OAACR,UAAY","file":"googleMap.min.js","sourcesContent":["\r\nconst button = document.querySelector(\".search\");\r\nconst input1 = document.getElementById('origin');\r\n\r\n\r\nfunction intMap() {\r\n   const location = {lat :53.152360, lng :-0.224120};\r\n    \r\n    const map = new google.maps.Map(document.getElementById(\"map\"), { zoom: 8,\r\n    center: location});\r\n    \r\n    const marker = new google.maps.Marker({\r\n        position: location,\r\n        map:map,\r\n        mapTypeId: google.maps.MapTypeId.ROADMAP\r\n    })\r\n\r\n    const info = new google.maps.InfoWindow({\r\n        content:'<h1>The Petwood Hotel</h1>'\r\n    });\r\n    marker.addListener(\"click\", function() {\r\n        info.open(map, marker)\r\n    });\r\n    \r\n    autocomplete1 = new google.maps.places.Autocomplete(input1);\r\n\r\n    const directionsDisplay = new google.maps.DirectionsRenderer();\r\n    const directionsService = new google.maps.DirectionsService();\r\n    \r\n    \r\n    directionsDisplay.setMap(map);\r\n    calcRoute(directionsDisplay, directionsService);\r\n    document.getElementById(\"mode\").addEventListener(\"change\",() => {\r\n        calcRoute(directionsDisplay, directionsService );\r\n    })\r\n}\r\n\r\nfunction calcRoute(directionsDisplay, directionsService) {\r\n    const request = {\r\n        origin: input1.value,\r\n        destination: {lat :53.152360, lng :-0.224120},\r\n        travelMode: google.maps.TravelMode[selectMode], \r\n    }\r\n    console.log(request.travelMode);\r\n\r\n    //pass the request to the route method\r\n    directionsService.route(request, function (result, status) {\r\n        if (status == google.maps.DirectionsStatus.OK) {\r\n\r\n            //Get distance and time\r\n            const output = document.querySelector('.output');\r\n            output.innerHTML = \"<div class='alert-info'>From: \" + document.getElementById(\"origin\").value + \".<br />To: Petwood Hotel\"  + \".<br /> Distance <i class='fas fa-road'></i> : \" + result.routes[0].legs[0].distance.text + \".<br />Duration <i class='fas fa-hourglass-start'></i> : \" + result.routes[0].legs[0].duration.text + \".</div>\";\r\n\r\n            //display route\r\n            directionsDisplay.setDirections(result);\r\n        } else {\r\n            //delete route from map\r\n            directionsDisplay.setDirections({ routes: [] });\r\n            //center map \r\n            map.setCenter(location);\r\n\r\n            //show error message\r\n            output.innerHTML = \"<div class='alert-danger'> Could not retrieve driving distance.</div>\";\r\n        }\r\n    });\r\n}\r\n\r\n\r\n    \r\n\r\n    \r\n\r\n\r\n\r\n \r\n \r\n"]}